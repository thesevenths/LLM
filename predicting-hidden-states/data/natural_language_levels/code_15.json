{
  "level": "code",
  "user": "Generate Python code",
  "assistant": "import music21\nimport music21.note\n\nclass GeneratedScore:\n    def __init__(self, instruments, lookups, time_signature='4/4', relative_offset=True):\n        self.score = music21.stream.Score()\n        time_signature = music21.meter.TimeSignature(time_signature)\n        self.parts = {}\n        for instrument in instruments:\n            inst = music21.stream.instrument.Instrument(instrument)\n            part = music21.stream.Part(id=instrument)\n            part.insert(0, inst)\n            #part.insert(0, time_signature)\n            self.score.insert(0, part)\n            self.parts[instrument] = part\n        self.lookups = lookups\n        self.relative_offset = relative_offset\n        self.current_offset = 0\n\n    def add_note(self, instrument, offset, pitch, velocity, duration):\n        # x:  0: instrument, 1: offset, 2: offset_in_measure, 3: pitch, 4: velocity, 5: duration\n        note = music21.note.Note(pitch, duration=music21.duration.Duration(duration))\n        part = self.parts[instrument]\n        if self.relative_offset:\n            self.current_offset += offset\n        else:\n            self.current_offset = offset\n        part.insert(self.current_offset, note)\n        pass\n\n    def parse_array(self, x):\n        for n in range(x.shape[0]):\n            note = x[n]\n            parsed_note = []\n            for a in range(note.shape[0]):\n                value = self.lookups[a][2][note[a]]\n                parsed_note.append(value)\n            self.add_note(instrument=parsed_note[0],\n                          offset=parsed_note[1],\n                          pitch=parsed_note[3],\n                          velocity=parsed_note[4],\n                          duration=parsed_note[5])\n\n    def export(self, path, format='xml'):\n        self.score.write(format, fp=path)\n\n\nif __name__ == '__main__':\n    score = GeneratedScore(['soprano', 'alto', 'tenor', 'bass'], lookups=None)\n    score.add_note('alto', offset=0., pitch=60, velocity=0.5, duration=1.)\n    score.add_note('alto', offset=2., pitch=62, velocity=0.5, duration=1.)\n    score.add_note('alto', offset=1., pitch=64, velocity=0.5, duration=1.)\n    score.export_xml('test_export.xml')\n    score.score.show()\n    stream = music21.stream.Stream()\n    note = music21.note.Note(60, duration=music21.duration.Duration(0.5))\n    pass\n"
}