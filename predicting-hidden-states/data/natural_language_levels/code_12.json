{
  "level": "code",
  "user": "Generate Python code",
  "assistant": "from unittest import TestCase\nfrom symbolic_music.item_contextualizer import ItemContextualizer\nimport numpy as np\n\n\nclass TestItemContextualizer(TestCase):\n    def test_context_creation(self):\n        items = [[1, 0], [3, 71],\n                 [1, 1], [3, 67],\n                 [1, 2], [3, 62],\n                 [1, 3], [3, 55], [0, 50], [4, 55], [3, 54], [0, 50],\n                 [1, 0], [4, 71], [3, 74],\n                 [1, 2], [4, 67], [3, 64],\n                 [1, 3], [4, 54], [3, 55]]\n        ic = ItemContextualizer()\n\n        for [itype, value] in items:\n            itype = np.array([itype], dtype=np.long)\n            value = np.array([value], dtype=np.long)\n            this_item = ic.add_item(itype, value)\n            split_item = np.split(this_item, ic.item_split, axis=1)\n            pass\n        pass\n\n    def test_score_generation(self):\n        items = [[1, 0], [3, 71],\n                 [1, 1], [3, 67],\n                 [1, 2], [3, 62],\n                 [1, 3], [3, 55], [0, 50], [4, 55], [3, 54], [0, 50],\n                 [1, 0], [4, 71], [3, 74],\n                 [1, 2], [4, 62], [3, 64],\n                 [1, 3], [4, 54], [3, 55]]\n        ic = ItemContextualizer()\n\n        for [itype, value] in items:\n            itype = np.array([itype], dtype=np.long)\n            value = np.array([value], dtype=np.long)\n            this_item = ic.add_item(itype, value)\n\n        score = ic.write_score(instruments=['Soprano', 'Alto', 'Tenor', 'Bass'])\n        score.export('test_score.xml')"
}